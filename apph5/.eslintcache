[{"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\index.js":"1","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\page\\App.js":"2","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\InputItem\\index.js":"3","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\TopTitle\\index.js":"4","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\TreeSelectItem\\index.js":"5","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\NumberItem\\index.js":"6","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\SelectItem\\index.js":"7","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\PickerView\\index.js":"8","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\index.js":"9","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\DatePickerItem\\index.js":"10","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\Button\\index.js":"11","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\util\\index.js":"12","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\TextAreaItem\\index.js":"13","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\Body\\index.js":"14","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\MonthPicker\\index.js":"15","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\DatePicker\\index.js":"16","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\YearPicker\\index.js":"17","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\TimePicker\\index.js":"18","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Select\\index.js":"19","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\SelectTree\\index.js":"20","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\TopSearcher\\index.js":"21","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawer\\index.js":"22","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\TreeSelectPickerView\\index.js":"23","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\PageLoading\\index.js":"24","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\DatePickerView\\index.js":"25","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Input\\index.js":"26","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Radios\\index.js":"27","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\index.js":"28","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\page\\faker.js":"29"},{"size":173,"mtime":1605765956282,"results":"30","hashOfConfig":"31"},{"size":2081,"mtime":1607330199251,"results":"32","hashOfConfig":"31"},{"size":1324,"mtime":1604395261116,"results":"33","hashOfConfig":"31"},{"size":1828,"mtime":1605681938299,"results":"34","hashOfConfig":"31"},{"size":2453,"mtime":1604390773571,"results":"35","hashOfConfig":"31"},{"size":1414,"mtime":1604395949212,"results":"36","hashOfConfig":"31"},{"size":2430,"mtime":1606717244631,"results":"37","hashOfConfig":"31"},{"size":2497,"mtime":1606717238408,"results":"38","hashOfConfig":"31"},{"size":3056,"mtime":1607050629237,"results":"39","hashOfConfig":"31"},{"size":1877,"mtime":1604455768087,"results":"40","hashOfConfig":"31"},{"size":838,"mtime":1607321973180,"results":"41","hashOfConfig":"31"},{"size":2108,"mtime":1607052563374,"results":"42","hashOfConfig":"31"},{"size":1376,"mtime":1604989686391,"results":"43","hashOfConfig":"31"},{"size":255,"mtime":1605667525702,"results":"44","hashOfConfig":"31"},{"size":3377,"mtime":1606790685460,"results":"45","hashOfConfig":"31"},{"size":3551,"mtime":1606790647534,"results":"46","hashOfConfig":"31"},{"size":3328,"mtime":1606790698467,"results":"47","hashOfConfig":"31"},{"size":3645,"mtime":1606790692770,"results":"48","hashOfConfig":"31"},{"size":3260,"mtime":1606790708135,"results":"49","hashOfConfig":"31"},{"size":3879,"mtime":1607064602915,"results":"50","hashOfConfig":"31"},{"size":1977,"mtime":1607070382259,"results":"51","hashOfConfig":"31"},{"size":3610,"mtime":1606790612262,"results":"52","hashOfConfig":"31"},{"size":2969,"mtime":1604391215208,"results":"53","hashOfConfig":"31"},{"size":348,"mtime":1599548311138,"results":"54","hashOfConfig":"31"},{"size":2312,"mtime":1604385836332,"results":"55","hashOfConfig":"31"},{"size":732,"mtime":1605148305031,"results":"56","hashOfConfig":"31"},{"size":817,"mtime":1605492986529,"results":"57","hashOfConfig":"31"},{"size":655,"mtime":1605504146741,"results":"58","hashOfConfig":"31"},{"size":5836,"mtime":1607330201457,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"4h18w",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\index.js",[],["134","135"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\page\\App.js",["136","137","138"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\InputItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\TopTitle\\index.js",["139","140"],"// =======================rtmcc==========================\n// UI-TopTitle\n// UI-顶部标题\n// v1.0.0\n// create-date:2020-11-18\n// developer:zbc\n// last maintian date:2020-11-18\n// =======================rtmcc==========================\nimport React from \"react\";\nimport \"./style.scss\";\nimport util from \"../../util/index\";\nimport { Dropdown } from \"antd\";\nimport \"antd/es/dropdown/style/css\";\nimport \"antd\";\nimport {\n\tLeftOutlined,\n\tMenuOutlined,\n\tQuestionOutlined,\n\tPlusCircleOutlined,\n\tScanOutlined\n} from \"@ant-design/icons\";\n\nconst renderAddonsIcon = name => {\n\tswitch (name) {\n\t\tcase \"add\":\n\t\t\treturn <PlusCircleOutlined />;\n\t\tcase \"scan\":\n\t\t\treturn <ScanOutlined />;\n\t\tdefault:\n\t\t\treturn <QuestionOutlined />;\n\t}\n};\n\nconst onPressBack = props => {\n\tutil.traceBack(\"back-btn\");\n\tconst { onPressBack } = props;\n\tif (typeof onPressBack === \"function\") {\n\t\tonPressBack();\n\t}\n};\n\nconst renderAddons = props => {\n\tconst { addons } = props;\n\tif (addons instanceof Array && addons.length) {\n\t\tconst adddonsArr = addons.map((item, i) => {\n\t\t\tconst { fn } = item;\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tkey={`ia${i}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (typeof fn === \"function\") fn();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{renderAddonsIcon(item.name)}\n\t\t\t\t\t<span>{item.text}</span>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\toverlay={\n\t\t\t\t\t<ul className=\"rtmcc-rnweb-top-title-right-addons\">{adddonsArr}</ul>\n\t\t\t\t}\n\t\t\t\tplacement=\"bottomLeft\"\n\t\t\t\tarrow\n\t\t\t>\n\t\t\t\t<MenuOutlined />\n\t\t\t</Dropdown>\n\t\t);\n\t}\n};\n\nexport default class extends React.Component {\n\trender() {\n\t\tconst { title, addons, canBack } = this.props;\n\t\treturn (\n\t\t\t<div className=\"rtmcc-rnweb-top-title\">\n\t\t\t\t{canBack ? (\n\t\t\t\t\t<LeftOutlined\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonPressBack(this.props);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<p>{title}</p>\n\t\t\t\t{renderAddons(this.props)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\TreeSelectItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\NumberItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\SelectItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\PickerView\\index.js",["141","142"],"// props:\r\n// data\r\n// onShowBox\r\n// onConfirm\r\n// ====================\r\n// 方法：\r\n// show\r\n// hide\r\n// getValue\r\n// setValue\r\n// clear\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { PickerView } from \"antd-mobile\";\r\n\r\n// 从数据源当中拿出当前这个obj\r\nconst getItemFromDataSource = (data, value) => {\r\n\tif (!value) return;\r\n\tlet obj = data.filter(item => {\r\n\t\treturn item.value === value;\r\n\t});\r\n\treturn obj[0];\r\n};\r\n\r\nclass Default extends React.Component {\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tstate = {\r\n\t\tvalue: null,\r\n\t\tshowBox: false,\r\n\t\tbusy: false // 正在展示\r\n\t};\r\n\r\n\tcomponentDidMount() {}\r\n\r\n\trender() {\r\n\t\tconst { data, loading } = this.props;\r\n\t\tconst { showBox, value } = this.state;\r\n\r\n\t\tconst onConfirm = e => {\r\n\t\t\tconst { data, onConfirm } = this.props;\r\n\t\t\tconst { value } = this.state;\r\n\t\t\tlet obj = getItemFromDataSource(data, value);\r\n\t\t\t// 默认第一项矫正\r\n\t\t\tif (!obj) obj = data[0];\r\n\t\t\tif (typeof onConfirm === \"function\") {\r\n\t\t\t\tonConfirm(obj);\r\n\t\t\t}\r\n\t\t\tthis.hide(e);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tshowBox\r\n\t\t\t\t\t\t? \"rtmcc-rnweb-pickerview-container\"\r\n\t\t\t\t\t\t: \"rtmcc-rnweb-pickerview-container hide\"\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"msk\" onClick={this.hide} />\r\n\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t<span onClick={onConfirm}>确定</span>\r\n\t\t\t\t\t\t<span onClick={this.hide}>取消</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tree-box\">\r\n\t\t\t\t\t\t{showBox ? (\r\n\t\t\t\t\t\t\t<PickerView\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tvalue={[value]}\r\n\t\t\t\t\t\t\t\tcols={1}\r\n\t\t\t\t\t\t\t\tonChange={value =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tvalue: value[0]\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tshow = e => {\r\n\t\tconst { onShowBox } = this.props;\r\n\t\tif (typeof onShowBox === \"function\") onShowBox();\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true,\r\n\t\t\tbusy: true\r\n\t\t});\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tbusy: false\r\n\t\t\t});\r\n\t\t}, 150);\r\n\t};\r\n\r\n\thide = e => {\r\n\t\tif (e && e.stopPropagation) e.stopPropagation();\r\n\t\tif (this.state.busy) return;\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\treturn this.state.value;\r\n\t};\r\n\r\n\tsetValue = ({ value }) => {\r\n\t\tthis.setState({\r\n\t\t\tvalue: value\r\n\t\t});\r\n\t};\r\n\r\n\tclear = () => {\r\n\t\tthis.setState({\r\n\t\t\tvalue: null\r\n\t\t});\r\n\t};\r\n}\r\n\r\nDefault.getItemFromDataSource = getItemFromDataSource;\r\n\r\nexport default Default;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\index.js",["143"],"// ===============================================================\n// === List\n// === v1.0.0\n// === 首次编辑日期：2020-11-03\n// === 作者：zbc\n// === 上一次维护日期：2020-11-03\n// ===============================================================\n// props:\n// btns\n// ===============================================================\n// 方法:\n// getValue\n// ===============================================================\nimport React from \"react\";\nimport \"./style.css\";\n// ===============================================================\nimport InputItem from \"./InputItem/index\";\nimport NumberItem from \"./NumberItem/index\";\nimport SelectItem from \"./SelectItem/index\";\nimport DatePickerItem from \"./DatePickerItem/index\";\nimport TreeSelectItem from \"./TreeSelectItem/index\";\nimport TextAreaItem from \"./TextAreaItem/index\";\nimport Button from \"./Button/index\";\n\nimport \"antd-mobile/es/picker-view/style/css.js\";\n\nconst renderListItem = (item, index) => {\n\tconst { type, label, disabled, defaultValue, data } = item;\n\n\tswitch (type) {\n\t\tcase \"date\":\n\t\t\treturn (\n\t\t\t\t<DatePickerItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"tree-select\":\n\t\t\treturn (\n\t\t\t\t<TreeSelectItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tdata={data}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"select\":\n\t\t\treturn (\n\t\t\t\t<SelectItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tdata={data}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"number\":\n\t\t\treturn (\n\t\t\t\t<NumberItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"input\":\n\t\t\treturn (\n\t\t\t\t<InputItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"text-area\":\n\t\t\treturn (\n\t\t\t\t<TextAreaItem\n\t\t\t\t\tkey={`li${index}`}\n\t\t\t\t\tref={`li${index}`}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nclass Default extends React.Component {\n\tcomponentDidMount() {}\n\n\trender() {\n\t\tconst { btns = [] } = this.props;\n\t\treturn (\n\t\t\t<ul className=\"rtmcc-rnweb-list\">\n\t\t\t\t{this.props.children}\n\t\t\t\t<li className=\"btns\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{btns.map((item, i) => {\n\t\t\t\t\t\t\tconst { label, func, disabled } = item;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={`bk${i}`}\n\t\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\t\tonClick={func}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\t// ********************************\n\tgetValue(_this) {\n\t\tconst { children } = this.props;\n\n\t\tlet conditions = [];\n\t\tchildren.map((item, i) => {\n\t\t\tconditions.push(_this.refs[`li${i}`].getValue());\n\t\t});\n\n\t\treturn conditions;\n\t}\n}\n\nDefault.renderListItem = renderListItem;\nDefault.Button = Button;\n\nexport default Default;\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\DatePickerItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\Button\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\util\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\List\\TextAreaItem\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\Body\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\MonthPicker\\index.js",["144"],"// ========================\r\n// 默认值：没有\r\n// 打开默认值：今天\r\n// 可清空\r\n// 可选日期范围：10年前、3年后\r\n// ========================\r\n\r\nimport React from \"react\";\r\nimport \"./style.css\";\r\nimport { DatePickerView } from \"antd-mobile\";\r\nimport \"antd-mobile/es/date-picker-view/style/css.js\";\r\nimport moment from \"moment\";\r\nimport util from \"../../../util/index\";\r\n\r\nimport calendar from \"../$img//icon-calendar.png\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst formatter = x => {\r\n\treturn x.format(\"YYYY-MM\");\r\n};\r\n\r\nconst getMonthStr = date => {\r\n\tlet d;\r\n\tif (!date) d = new Date();\r\n\telse {\r\n\t\td = date;\r\n\t}\r\n\tlet str = `${d.getFullYear()}-${util.executeNumber(d.getMonth() + 1)}`;\r\n\treturn str;\r\n};\r\n\r\nclass MonthPicker extends React.Component {\r\n\tstate = {\r\n\t\ttext: \"\",\r\n\t\tcomValue: new Date(), //纯粹是为了缓冲\r\n\t\tvalue: undefined,\r\n\t\tshowBox: true\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//修复那个蜜汁bug\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\r\n\t\t//设置默认值\r\n\t\tconst { defaultValue } = this.props;\r\n\t\tif (defaultValue)\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomValue: new Date(defaultValue),\r\n\t\t\t\tvalue: new Date(defaultValue),\r\n\t\t\t\ttext: getMonthStr(new Date(defaultValue))\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { text, comValue, value, showBox } = this.state;\r\n\t\tconst { clearable, placeholder = \"\" } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"rtmcc-rnweb-year-picker\" onClick={this.onOpenBox}>\r\n\t\t\t\t\t<img alt=\"\" src={calendar} />\r\n\t\t\t\t\t<span>{text || placeholder}</span>\r\n\t\t\t\t\t{clearable && value ? <CloseOutlined onClick={this.clear} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tshowBox ? \"pickerview-container\" : \"pickerview-container hide\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"msk\" onClick={this.onHideBox} />\r\n\t\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t\t<span onClick={this.confirm}>确定</span>\r\n\t\t\t\t\t\t\t<span onClick={this.cancel}>取消</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<DatePickerView\r\n\t\t\t\t\t\t\tmode={\"month\"}\r\n\t\t\t\t\t\t\tvalue={comValue}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tclear = e => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState({\r\n\t\t\ttext: \"\",\r\n\t\t\tvalue: null,\r\n\t\t\tcomValue: new Date()\r\n\t\t});\r\n\t};\r\n\r\n\tcheckItUp = () => {\r\n\t\t//每次打开时加载到当前值\r\n\t\tconst { text } = this.state;\r\n\t\tif (!text) return;\r\n\t\tthis.setState({\r\n\t\t\tcomValue: new Date(text),\r\n\t\t\tvalue: new Date(text)\r\n\t\t});\r\n\t};\r\n\r\n\tonOpenBox = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true\r\n\t\t});\r\n\t\tthis.checkItUp();\r\n\t};\r\n\r\n\tonHideBox = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = date => {\r\n\t\tconsole.log(date);\r\n\t\tthis.setState({\r\n\t\t\tcomValue: date\r\n\t\t});\r\n\t\t// ===\r\n\t\tconst { onChange } = this.props;\r\n\t\tif (typeof onChange === \"function\") onChange(date);\r\n\t};\r\n\r\n\tconfirm = () => {\r\n\t\tconst { onChange } = this.props;\r\n\t\tconst { text, comValue } = this.state;\r\n\t\tthis.onHideBox();\r\n\t\tthis.setState({\r\n\t\t\ttext: comValue ? getMonthStr(comValue) : undefined,\r\n\t\t\tvalue: comValue\r\n\t\t});\r\n\t\tif (typeof onChange === \"function\") {\r\n\t\t\tonChange(moment(comValue));\r\n\t\t}\r\n\t};\r\n\r\n\tcancel = () => {\r\n\t\tthis.onHideBox();\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\tif (this.state.value) return formatter(moment(this.state.value));\r\n\t\treturn undefined;\r\n\t};\r\n}\r\n\r\nexport default MonthPicker;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\DatePicker\\index.js",["145"],"// ========================\r\n// 默认值：没有\r\n// 打开默认值：今天\r\n// 可清空\r\n// 可选日期范围：10年前、3年后\r\n// ========================\r\n\r\nimport React from \"react\";\r\nimport \"./style.css\";\r\nimport { DatePickerView } from \"antd-mobile\";\r\nimport \"antd-mobile/es/date-picker-view/style/css.js\";\r\nimport moment from \"moment\";\r\nimport util from \"../../../util/index\";\r\n\r\nimport calendar from \"../$img/icon-calendar.png\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst formatter = x => {\r\n\treturn x.format(\"YYYY-MM-DD\");\r\n};\r\n\r\nconst getDateStr = date => {\r\n\tlet d;\r\n\tif (!date) d = new Date();\r\n\telse {\r\n\t\td = date;\r\n\t}\r\n\tlet str = `${d.getFullYear()}-${util.executeNumber(\r\n\t\td.getMonth() + 1\r\n\t)}-${util.executeNumber(d.getDate())}`;\r\n\treturn str;\r\n};\r\n\r\nclass DatePicker extends React.Component {\r\n\tstate = {\r\n\t\ttext: \"\",\r\n\t\tcomValue: new Date(), //纯粹是为了缓冲\r\n\t\tvalue: undefined,\r\n\t\tshowBox: true\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//修复那个蜜汁bug\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\r\n\t\t//设置默认值\r\n\t\tconst { defaultValue } = this.props;\r\n\t\tif (defaultValue)\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomValue: new Date(defaultValue),\r\n\t\t\t\tvalue: new Date(defaultValue),\r\n\t\t\t\ttext: getDateStr(new Date(defaultValue))\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { text, comValue, value, showBox } = this.state;\r\n\t\tconst { disabled, clearable, placeholder = \"请选择时间\" } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`rtmcc-rnweb-date-picker${disabled ? \" disabled\" : \"\"}`}\r\n\t\t\t\t\tonClick={this.onOpenBox}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img alt=\"\" src={calendar} />\r\n\t\t\t\t\t<span>{text || placeholder}</span>\r\n\t\t\t\t\t{clearable && value ? <CloseOutlined onClick={this.clear} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tshowBox ? \"pickerview-container\" : \"pickerview-container hide\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"msk\" onClick={this.onHideBox} />\r\n\t\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t\t<span onClick={this.confirm}>确定</span>\r\n\t\t\t\t\t\t\t<span onClick={this.cancel}>取消</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<DatePickerView\r\n\t\t\t\t\t\t\tmode={\"date\"}\r\n\t\t\t\t\t\t\tvalue={comValue}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tclear = e => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState({\r\n\t\t\ttext: \"\",\r\n\t\t\tvalue: null,\r\n\t\t\tcomValue: new Date()\r\n\t\t});\r\n\t};\r\n\r\n\tcheckItUp = () => {\r\n\t\t//每次打开时加载到当前值\r\n\t\tconst { text } = this.state;\r\n\t\tif (!text) return;\r\n\t\tthis.setState({\r\n\t\t\tcomValue: new Date(text),\r\n\t\t\tvalue: new Date(text)\r\n\t\t});\r\n\t};\r\n\r\n\tonOpenBox = () => {\r\n\t\tconst { disabled } = this.props;\r\n\t\tif (disabled) return;\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true\r\n\t\t});\r\n\t\tthis.checkItUp();\r\n\t};\r\n\r\n\tonHideBox = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = date => {\r\n\t\tconsole.log(date);\r\n\t\tthis.setState({\r\n\t\t\tcomValue: date\r\n\t\t});\r\n\t\t// ===\r\n\t\tconst { onChange } = this.props;\r\n\t\tif (typeof onChange === \"function\") onChange(date);\r\n\t};\r\n\r\n\tconfirm = () => {\r\n\t\tconst { onChange } = this.props;\r\n\t\tconst { text, comValue } = this.state;\r\n\t\tthis.onHideBox();\r\n\t\tthis.setState({\r\n\t\t\ttext: comValue ? getDateStr(comValue) : undefined,\r\n\t\t\tvalue: comValue\r\n\t\t});\r\n\t\tif (typeof onChange === \"function\") {\r\n\t\t\tonChange(moment(comValue));\r\n\t\t}\r\n\t};\r\n\r\n\tcancel = () => {\r\n\t\tthis.onHideBox();\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\tif (this.state.value) return formatter(moment(this.state.value));\r\n\t\treturn undefined;\r\n\t};\r\n}\r\n\r\nexport default DatePicker;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\YearPicker\\index.js",["146","147"],"// ========================\r\n// 默认值：没有\r\n// 打开默认值：今天\r\n// 可清空\r\n// 可选日期范围：10年前、3年后\r\n// ========================\r\n\r\nimport React from \"react\";\r\nimport \"./style.css\";\r\nimport { DatePickerView } from \"antd-mobile\";\r\nimport \"antd-mobile/es/date-picker-view/style/css.js\";\r\nimport moment from \"moment\";\r\nimport util from \"../../../util/index\";\r\n\r\nimport calendar from \"../$img//icon-calendar.png\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst formatter = x => {\r\n\treturn x.format(\"YYYY\");\r\n};\r\n\r\nconst getYearStr = date => {\r\n\tlet d;\r\n\tif (!date) d = new Date();\r\n\telse {\r\n\t\td = date;\r\n\t}\r\n\tlet str = `${d.getFullYear()}`;\r\n\treturn str;\r\n};\r\n\r\nclass YearPicker extends React.Component {\r\n\tstate = {\r\n\t\ttext: \"\",\r\n\t\tcomValue: new Date(), //纯粹是为了缓冲\r\n\t\tvalue: undefined,\r\n\t\tshowBox: true\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//修复那个蜜汁bug\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\r\n\t\t//设置默认值\r\n\t\tconst { defaultValue } = this.props;\r\n\t\tif (defaultValue)\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomValue: new Date(defaultValue),\r\n\t\t\t\tvalue: new Date(defaultValue),\r\n\t\t\t\ttext: getYearStr(new Date(defaultValue))\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { text, comValue, value, showBox } = this.state;\r\n\t\tconst { clearable, placeholder = \"\" } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"rtmcc-rnweb-year-picker\" onClick={this.onOpenBox}>\r\n\t\t\t\t\t<img alt=\"\" src={calendar} />\r\n\t\t\t\t\t<span>{text || placeholder}</span>\r\n\t\t\t\t\t{clearable && value ? <CloseOutlined onClick={this.clear} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tshowBox ? \"pickerview-container\" : \"pickerview-container hide\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"msk\" onClick={this.onHideBox} />\r\n\t\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t\t<span onClick={this.confirm}>确定</span>\r\n\t\t\t\t\t\t\t<span onClick={this.cancel}>取消</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<DatePickerView\r\n\t\t\t\t\t\t\tmode={\"year\"}\r\n\t\t\t\t\t\t\tvalue={comValue}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tclear = e => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState({\r\n\t\t\ttext: \"\",\r\n\t\t\tvalue: null,\r\n\t\t\tcomValue: new Date()\r\n\t\t});\r\n\t};\r\n\r\n\tcheckItUp = () => {\r\n\t\t//每次打开时加载到当前值\r\n\t\tconst { text } = this.state;\r\n\t\tif (!text) return;\r\n\t\tthis.setState({\r\n\t\t\tcomValue: new Date(text),\r\n\t\t\tvalue: new Date(text)\r\n\t\t});\r\n\t};\r\n\r\n\tonOpenBox = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true\r\n\t\t});\r\n\t\tthis.checkItUp();\r\n\t};\r\n\r\n\tonHideBox = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t};\r\n\r\n\tonChange = date => {\r\n\t\tconsole.log(date);\r\n\t\tthis.setState({\r\n\t\t\tcomValue: date\r\n\t\t});\r\n\t\t// ===\r\n\t\tconst { onChange } = this.props;\r\n\t\tif (typeof onChange === \"function\") onChange(date);\r\n\t};\r\n\r\n\tconfirm = () => {\r\n\t\tconst { onChange } = this.props;\r\n\t\tconst { text, comValue } = this.state;\r\n\t\tthis.onHideBox();\r\n\t\tthis.setState({\r\n\t\t\ttext: comValue ? getYearStr(comValue) : undefined,\r\n\t\t\tvalue: comValue\r\n\t\t});\r\n\t\tif (typeof onChange === \"function\") {\r\n\t\t\tonChange(moment(comValue));\r\n\t\t}\r\n\t};\r\n\r\n\tcancel = () => {\r\n\t\tthis.onHideBox();\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\tif (this.state.value) return formatter(moment(this.state.value));\r\n\t\treturn undefined;\r\n\t};\r\n}\r\n\r\nexport default YearPicker;\r\n",["148","149"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\TimePicker\\index.js",["150"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Select\\index.js",["151","152"],"import React from \"react\";\r\nimport \"./style.css\";\r\nimport { PickerView } from \"antd-mobile\";\r\nimport \"antd-mobile/es/picker-view/style/css.js\";\r\n\r\nimport arrow from \"../$img/icon-select-arrow.png\";\r\nimport arrow_disabled from \"../$img/icon-select-arrow-disabled.png\";\r\n\r\nclass Default extends React.Component {\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tconst { defaultValue } = nextProps;\r\n\t\tlet et = nextProps.data.filter(item => {\r\n\t\t\treturn item.label === prevState.text;\r\n\t\t})[0];\r\n\r\n\t\tif (!et)\r\n\t\t\treturn {\r\n\t\t\t\ttext: defaultValue\r\n\t\t\t\t\t? defaultValue.text\r\n\t\t\t\t\t: nextProps.data[0] && nextProps.data[0].label,\r\n\t\t\t\tvalue: defaultValue\r\n\t\t\t\t\t? defaultValue.value\r\n\t\t\t\t\t: nextProps.data[0] && [nextProps.data[0].value]\r\n\t\t\t};\r\n\r\n\t\treturn { data: nextProps.data };\r\n\t}\r\n\r\n\tstate = {\r\n\t\ttext: undefined,\r\n\t\tvalue: undefined,\r\n\t\tshowBox: true,\r\n\t\tdata: []\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//修复那个蜜汁bug\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { disabled } = this.props;\r\n\t\tconst { data, showBox } = this.state;\r\n\t\tlet { text, value } = this.state;\r\n\t\tif (!text && data.length) text = data[0].label;\r\n\t\tif (!value && data.length) value = data[0].value;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`rtmcc-rnweb-select${disabled ? \" disabled\" : \"\"}`}\r\n\t\t\t\t\tonClick={this.onOpenBox}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span>{text ? text : data[0] ? data[0].label : \"\"}</span>\r\n\t\t\t\t\t<img alt=\"\" src={arrow} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tshowBox ? \"pickerview-container\" : \"pickerview-container hide\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"msk\" onClick={this.onHideBox} />\r\n\t\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t\t<span onClick={this.confirm}>确定</span>\r\n\t\t\t\t\t\t\t<span onClick={this.cancel}>取消</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{showBox ? (\r\n\t\t\t\t\t\t\t<PickerView\r\n\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tcols={1}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tfixUp = () => {\r\n\t\t//初次打开时加载到当前选项\r\n\t\tconst { data } = this.props;\r\n\t\tconst { text } = this.state;\r\n\t\tif (!text) return;\r\n\t\tlet obj = data.filter(item => {\r\n\t\t\treturn item.label === text;\r\n\t\t})[0];\r\n\t\tif (obj)\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalue: [obj.value]\r\n\t\t\t});\r\n\t};\r\n\r\n\tonOpenBox = () => {\r\n\t\tconst { disabled } = this.props;\r\n\t\tif (disabled) return;\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true\r\n\t\t});\r\n\t\tthis.fixUp();\r\n\t};\r\n\r\n\tonHideBox = bool => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t\tif (bool) this.fixUp();\r\n\t};\r\n\r\n\tonChange = v => {\r\n\t\tconst { data } = this.props;\r\n\t\tlet obj = data.filter(item => {\r\n\t\t\treturn item.value === v[0];\r\n\t\t})[0];\r\n\t\tthis.setState({\r\n\t\t\tvalue: [obj.value]\r\n\t\t});\r\n\t};\r\n\r\n\tconfirm = () => {\r\n\t\tconst { data, onChange } = this.props;\r\n\t\tconst { text, value } = this.state;\r\n\t\tthis.onHideBox(false);\r\n\t\tlet obj = data.filter(item => {\r\n\t\t\treturn item.value === value[0];\r\n\t\t})[0];\r\n\t\tif (obj)\r\n\t\t\tthis.setState({\r\n\t\t\t\ttext: obj.label\r\n\t\t\t});\r\n\t\tif (typeof onChange === \"function\") {\r\n\t\t\tonChange(obj);\r\n\t\t}\r\n\t};\r\n\r\n\tcancel = () => {\r\n\t\tthis.onHideBox(true);\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\treturn this.state.value;\r\n\t};\r\n}\r\n\r\nexport default Default;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\SelectTree\\index.js",["153","154","155"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\TopSearcher\\index.js",["156"],"import React, { Fragment } from \"react\";\nimport \"./style.css\";\nimport { SearchOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport RightDrawer from \"../RightDrawer/index\";\n\n// 外接组件 RightDrawer 获取数据方法\nconst getConditions = classInstance => {\n\tlet conditions = {};\n\tif (classInstance.refs.rd) conditions = classInstance.refs.rd.getConditions;\n\treturn conditions;\n};\n\nclass Default extends React.Component {\n\tstate = {\n\t\ttext: \"\"\n\t};\n\n\trender() {\n\t\tconst { conditionList, placeholder, noinput, forMoreText } = this.props;\n\t\tconst moreConditions =\n\t\t\tconditionList instanceof Array && conditionList.length ? true : false;\n\t\tconst { showDrawer } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={noinput ? \"top-searcher noinput\" : \"top-searcher\"}>\n\t\t\t\t\t{noinput ? null : (\n\t\t\t\t\t\t<div className=\"main-input\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tconst { value } = e.target;\n\t\t\t\t\t\t\t\t\tthis.setState({ text: value });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SearchOutlined onClick={() => this.onQuery()} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{moreConditions ? (\n\t\t\t\t\t\t<div className=\"right-screen\" onClick={this.onClickScreen}>\n\t\t\t\t\t\t\t<span>{forMoreText || \"筛选\"}</span>\n\t\t\t\t\t\t\t<MenuOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t{moreConditions ? (\n\t\t\t\t\t<RightDrawer\n\t\t\t\t\t\tref=\"rd\"\n\t\t\t\t\t\tdata={conditionList}\n\t\t\t\t\t\t// onChange={this.onChangeConditions}\n\t\t\t\t\t\tonClickConfirmBtn={this.onQuery}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\t// 点击查询按钮\n\tonQuery = conditions => {\n\t\tconst { onClickQuery } = this.props;\n\t\tconditions = conditions ? conditions : getConditions(this);\n\t\tif (typeof onClickQuery === \"function\")\n\t\t\tonClickQuery({ searchText: this.state.text, ...conditions });\n\t};\n\n\t// 点击筛选按钮\n\tonClickScreen = () => {\n\t\tthis.refs.rd.show();\n\t\t// ------\n\t\tconst { onClickScreen } = this.props;\n\t\tif (typeof onClickScreen === \"function\") onClickScreen();\n\t};\n}\n\nexport default Default;\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawer\\index.js",["157","158"],"import React, { Fragment } from \"react\";\nimport \"./style.css\";\nimport RightDrawerConditions from \"../RightDrawerConditions/index\";\n\nimport { Button } from \"antd-mobile\";\nimport \"antd-mobile/es/button/style/css.js\";\n\nconst {\n\tInput,\n\tSelect,\n\tDatePicker,\n\tMonthPicker,\n\tYearPicker,\n\tTimePicker,\n\tSelectTree,\n\tRadios\n} = RightDrawerConditions;\n\nconst renderConditionItem = item => {\n\tconst {\n\t\tfield,\n\t\ttype,\n\t\tdata,\n\t\tplaceholder,\n\t\tclearable,\n\t\tdisabled,\n\t\tdefaultValue,\n\t\tonChange\n\t} = item;\n\tswitch (type) {\n\t\tcase \"input\":\n\t\t\treturn (\n\t\t\t\t<Input\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"select\":\n\t\t\treturn (\n\t\t\t\t<Select\n\t\t\t\t\tref={field}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"radios\":\n\t\t\treturn (\n\t\t\t\t<Radios\n\t\t\t\t\tref={field}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"date\":\n\t\t\treturn (\n\t\t\t\t<DatePicker\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tclearable={clearable}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"month\":\n\t\t\treturn (\n\t\t\t\t<MonthPicker\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tclearable={clearable}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"year\":\n\t\t\treturn (\n\t\t\t\t<YearPicker\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tclearable={clearable}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"time\":\n\t\t\treturn (\n\t\t\t\t<TimePicker\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tclearable={clearable}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase \"selecttree\":\n\t\t\treturn (\n\t\t\t\t<SelectTree\n\t\t\t\t\tref={field}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t/>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\n// 筛选抽屉\nclass Default extends React.Component {\n\tstate = {\n\t\tshowDrawer: false\n\t};\n\n\trender() {\n\t\tconst { showDrawer } = this.state;\n\t\tconst { data } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tshowDrawer ? \"right-drawer-msk\" : \"right-drawer-msk hidden\"\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => this.hide()}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tshowDrawer\n\t\t\t\t\t\t\t? \"right-drawer-container\"\n\t\t\t\t\t\t\t: \"right-drawer-container hidden\"\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"main-container\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{data.map((item, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={`i${i}`}>\n\t\t\t\t\t\t\t\t\t\t<label>{item.label}</label>\n\t\t\t\t\t\t\t\t\t\t{renderConditionItem(item)}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"drawer-btns\">\n\t\t\t\t\t\t\t<Button type=\"primary\" size=\"small\" onClick={this.onConfirm}>\n\t\t\t\t\t\t\t\t确定\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button type=\"primary\" size=\"small\" onClick={this.hide}>\n\t\t\t\t\t\t\t\t取消\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\tshow = () => {\n\t\tthis.setState({\n\t\t\tshowDrawer: true\n\t\t});\n\t};\n\n\thide = () => {\n\t\tthis.setState({\n\t\t\tshowDrawer: false\n\t\t});\n\t};\n\n\t// 获得查询条件\n\tgetConditions = () => {\n\t\tconst { data } = this.props;\n\t\tconst conditionObj = {};\n\t\tdata.map(item => {\n\t\t\tconst { field } = item;\n\t\t\tconditionObj[field] = this.refs[field].getValue();\n\t\t});\n\t\treturn conditionObj;\n\t};\n\n\t// 按下确认按钮\n\tonConfirm = () => {\n\t\tthis.hide();\n\t\tlet conditions = this.getConditions();\n\t\tconst { onClickConfirmBtn } = this.props;\n\t\tif (typeof onClickConfirmBtn === \"function\") onClickConfirmBtn(conditions);\n\t};\n}\nexport default Default;\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\TreeSelectPickerView\\index.js",["159","160"],"// props:\r\n// data\r\n// onShowBox\r\n// onConfirm\r\n// ====================\r\n// 方法：\r\n// show\r\n// hide\r\n// getValue\r\n// setValue\r\n// clear\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { FolderOpenOutlined } from \"@ant-design/icons\";\r\nimport { Tree } from \"antd\";\r\nimport \"antd/es/tree/style/index.css\";\r\n\r\n// 铺开树形数据\r\nconst spreadTreeData = data => {\r\n\tconst arr = [];\r\n\r\n\tconst sptd = _data => {\r\n\t\t_data.map(item => {\r\n\t\t\tarr.push({ title: item.title, key: item.key });\r\n\t\t\tif (item.children && item.children.length) {\r\n\t\t\t\tsptd(item.children);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tsptd(data);\r\n\treturn arr;\r\n};\r\n\r\n// 从数据源当中拿出当前这个obj\r\nconst getItemFromDataSource = (data, value) => {\r\n\tif (!value) return;\r\n\r\n\tlet spreadedData = spreadTreeData(data);\r\n\tlet obj = spreadedData.filter(item => {\r\n\t\treturn item.key === value[0];\r\n\t});\r\n\treturn obj[0];\r\n};\r\n\r\nclass Default extends React.Component {\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tstate = {\r\n\t\tvalue: null,\r\n\t\tshowBox: true\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//修复那个蜜汁bug\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { data, loading } = this.props;\r\n\t\tconst { showBox, value } = this.state;\r\n\r\n\t\tconst onConfirm = e => {\r\n\t\t\tconst { data, onConfirm } = this.props;\r\n\t\t\tconst { value } = this.state;\r\n\t\t\tlet obj = getItemFromDataSource(data, value);\r\n\t\t\tif (typeof onConfirm === \"function\") {\r\n\t\t\t\tonConfirm(obj);\r\n\t\t\t}\r\n\t\t\tthis.hide(e);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tshowBox\r\n\t\t\t\t\t\t? \"rtmcc-rnweb-treepickerview-container\"\r\n\t\t\t\t\t\t: \"rtmcc-rnweb-treepickerview-container hide\"\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"msk\" onClick={this.hide} />\r\n\t\t\t\t<div className=\"pickerview\">\r\n\t\t\t\t\t<div className=\"top-btns\">\r\n\t\t\t\t\t\t<span onClick={onConfirm}>确定</span>\r\n\t\t\t\t\t\t<span onClick={this.hide}>取消</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tree-box\">\r\n\t\t\t\t\t\t{showBox ? (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tonSelect={value =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttreeData={data}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{data instanceof Array && data.length > 0 ? null : (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<FolderOpenOutlined />\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<span style={{ margin: \"0 10px\" }}>加载中...</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span style={{ margin: \"0 10px\" }}>没有数据</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tshow = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowBox: true\r\n\t\t});\r\n\t};\r\n\r\n\thide = e => {\r\n\t\tif (e && e.stopPropagation) e.stopPropagation();\r\n\t\tthis.setState({\r\n\t\t\tshowBox: false\r\n\t\t});\r\n\t};\r\n\r\n\tgetValue = () => {\r\n\t\treturn this.state.value;\r\n\t};\r\n\r\n\tsetValue = v => {\r\n\t\tthis.setState({\r\n\t\t\tvalue: v\r\n\t\t});\r\n\t};\r\n\r\n\tclear = () => {\r\n\t\tthis.setState({\r\n\t\t\tvalue: null\r\n\t\t});\r\n\t};\r\n}\r\n\r\nDefault.getItemFromDataSource = getItemFromDataSource;\r\n\r\nexport default Default;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\PageLoading\\index.js",["161"],"import React from \"react\";\nimport \"./index.css\";\nimport { Spin } from \"antd\";\nimport \"antd/lib/spin/style/css\";\n\nexport default class extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page-loading-container\">\n\t\t\t\t<div className=\"page-loading-msk\" />\n\t\t\t\t<div className=\"page-loading\">\n\t\t\t\t\t<Spin />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\components\\DatePickerView\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Input\\index.js",["162"],"import React from \"react\";\r\nimport \"./style.css\";\r\nimport { PickerView } from \"antd-mobile\";\r\n\r\nclass Default extends React.Component {\r\n\tstate = {\r\n\t\ttext: \"\"\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { defaultValue } = this.props;\r\n\t\tif (defaultValue) {\r\n\t\t\tthis.setState({ text: defaultValue });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { disabled } = this.props;\r\n\t\tconst { text } = this.state;\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\tclassName={`rtmcc-rnweb-input${disabled ? \" disabled\" : \"\"}`}\r\n\t\t\t\tvalue={text}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet v = e.target.value;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttext: v\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tgetValue = () => {\r\n\t\treturn this.state.text;\r\n\t};\r\n}\r\n\r\nexport default Default;\r\n","C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\Radios\\index.js",["163"],"import React from \"react\";\nimport \"./style.css\";\nimport { Radio } from \"antd\";\nimport \"antd/es/radio/style/index.css\";\n\nexport default class extends React.Component {\n\tstate = {};\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\tconst { data = [], defaultValue } = this.props;\n\t\tconst loadDefaultValue = () => {\n\t\t\tif (defaultValue) return defaultValue;\n\t\t\telse {\n\t\t\t\treturn data[0] ? data[0].value : undefined;\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<div className=\"rtmcc-rnweb-radios\">\n\t\t\t\t<Radio.Group\n\t\t\t\t\tdefaultValue={loadDefaultValue()}\n\t\t\t\t\toptions={data}\n\t\t\t\t\tonChange={this.onChangeRadio}\n\t\t\t\t\toptionType=\"button\"\n\t\t\t\t\tbuttonStyle=\"solid\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonChangeRadio = e => {\n\t\tconst { value } = e.target;\n\t\tthis.setState({\n\t\t\tvalue\n\t\t});\n\t};\n\n\tgetValue = () => {\n\t\tconst { value } = this.state;\n\t\treturn value;\n\t};\n}\n",["164","165"],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\UI\\RightDrawerConditions\\index.js",[],"C:\\Users\\zbc\\Documents\\GitHub\\RN-rtzl-zhonglv\\apph5\\src\\page\\faker.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":22},{"ruleId":"170","severity":1,"message":"174","line":13,"column":10,"nodeType":"172","messageId":"173","endLine":13,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":15,"column":7,"nodeType":"172","messageId":"173","endLine":15,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":74,"column":1,"nodeType":"178","endLine":91,"endColumn":2},{"ruleId":"170","severity":1,"message":"179","line":76,"column":18,"nodeType":"172","messageId":"173","endLine":76,"endColumn":24},{"ruleId":"170","severity":1,"message":"180","line":13,"column":17,"nodeType":"172","messageId":"173","endLine":13,"endColumn":25},{"ruleId":"170","severity":1,"message":"181","line":41,"column":17,"nodeType":"172","messageId":"173","endLine":41,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":130,"column":26,"nodeType":"184","messageId":"185","endLine":130,"endColumn":28},{"ruleId":"170","severity":1,"message":"186","line":131,"column":11,"nodeType":"172","messageId":"173","endLine":131,"endColumn":15},{"ruleId":"170","severity":1,"message":"186","line":139,"column":11,"nodeType":"172","messageId":"173","endLine":139,"endColumn":15},{"ruleId":"170","severity":1,"message":"187","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":12},{"ruleId":"170","severity":1,"message":"186","line":132,"column":11,"nodeType":"172","messageId":"173","endLine":132,"endColumn":15},{"ruleId":"166","replacedBy":"188"},{"ruleId":"168","replacedBy":"189"},{"ruleId":"170","severity":1,"message":"186","line":142,"column":11,"nodeType":"172","messageId":"173","endLine":142,"endColumn":15},{"ruleId":"170","severity":1,"message":"190","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"170","severity":1,"message":"186","line":125,"column":11,"nodeType":"172","messageId":"173","endLine":125,"endColumn":15},{"ruleId":"170","severity":1,"message":"190","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":16,"column":18,"nodeType":"184","messageId":"185","endLine":16,"endColumn":20},{"ruleId":"170","severity":1,"message":"191","line":160,"column":17,"nodeType":"172","messageId":"173","endLine":160,"endColumn":25},{"ruleId":"170","severity":1,"message":"192","line":22,"column":11,"nodeType":"172","messageId":"173","endLine":22,"endColumn":21},{"ruleId":"170","severity":1,"message":"180","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":179,"column":17,"nodeType":"184","messageId":"185","endLine":179,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":25,"column":18,"nodeType":"184","messageId":"185","endLine":25,"endColumn":20},{"ruleId":"170","severity":1,"message":"193","line":67,"column":20,"nodeType":"172","messageId":"173","endLine":67,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":6,"column":1,"nodeType":"178","endLine":17,"endColumn":2},{"ruleId":"170","severity":1,"message":"194","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":6,"column":1,"nodeType":"178","endLine":43,"endColumn":2},{"ruleId":"166","replacedBy":"195"},{"ruleId":"168","replacedBy":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'FormOutlined' is defined but never used.","Identifier","unusedVar","'listData' is defined but never used.","'debugging' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","'addons' is assigned a value but never used.","'Fragment' is defined but never used.","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'text' is assigned a value but never used.","'util' is defined but never used.",["197"],["198"],"'arrow_disabled' is defined but never used.","'onChange' is assigned a value but never used.","'showDrawer' is assigned a value but never used.","'value' is assigned a value but never used.","'PickerView' is defined but never used.",["197"],["198"],"no-global-assign","no-unsafe-negation"]